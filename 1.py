"""
1. Реализовать класс Matrix (матрица).
   Обеспечить перегрузку конструктора класса (метод __init__()),
   который должен принимать данные (список списков) для формирования матрицы.
   
   Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
   
   Примеры матриц вы найдете в методичке.
   Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
   Далее реализовать перегрузку метода __add__()
   для реализации операции сложения двух объектов класса Matrix (двух матриц).
   Результатом сложения должна быть новая матрица.
   
   Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
   первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""
m_1: list = [[1, 2, 3],[4, 5, 6], [7, 8, 9]]
m_2: list = [[10, 20, 30],[40, 50, 60], [70, 80, 90]]


class Matrix:
    def __init__(self, data) -> None:
        self.data = data
    
    def __add__(self, other) -> str:
        sum_data: list = []
        for line in range(len(self.data)):
            sum_line = []
            for item in range(len(self.data[line])):
                sum_line.append(self.data[line][item] + other.data[line][item])
            sum_data.append(sum_line)
        return Matrix(sum_data)
    
    def __str__(self) -> str:
        out = ""
        for line in self.data:
            out += str(line) + "\n"
        return out

        

mtrx_1 = Matrix(m_1)
mtrx_2 = Matrix(m_2)

mtrx_3 = mtrx_1 + mtrx_2
print(mtrx_3)